#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CMS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CMS")]
	public partial class CMSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaccount(account instance);
    partial void Updateaccount(account instance);
    partial void Deleteaccount(account instance);
    partial void Inserttype_product(type_product instance);
    partial void Updatetype_product(type_product instance);
    partial void Deletetype_product(type_product instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    partial void Inserttable_cm(table_cm instance);
    partial void Updatetable_cm(table_cm instance);
    partial void Deletetable_cm(table_cm instance);
    partial void Insertfloor(floor instance);
    partial void Updatefloor(floor instance);
    partial void Deletefloor(floor instance);
    partial void Insertdetail_bill(detail_bill instance);
    partial void Updatedetail_bill(detail_bill instance);
    partial void Deletedetail_bill(detail_bill instance);
    partial void Insertbill(bill instance);
    partial void Updatebill(bill instance);
    partial void Deletebill(bill instance);
    #endregion
		
		public CMSDataContext() : 
				base(global::CMS.Properties.Settings.Default.CMSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CMSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CMSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<account> accounts
		{
			get
			{
				return this.GetTable<account>();
			}
		}
		
		public System.Data.Linq.Table<type_product> type_products
		{
			get
			{
				return this.GetTable<type_product>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
		
		public System.Data.Linq.Table<table_cm> table_cms
		{
			get
			{
				return this.GetTable<table_cm>();
			}
		}
		
		public System.Data.Linq.Table<floor> floors
		{
			get
			{
				return this.GetTable<floor>();
			}
		}
		
		public System.Data.Linq.Table<detail_bill> detail_bills
		{
			get
			{
				return this.GetTable<detail_bill>();
			}
		}
		
		public System.Data.Linq.Table<bill> bills
		{
			get
			{
				return this.GetTable<bill>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.account")]
	public partial class account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_account;
		
		private string _name_account;
		
		private string _password;
		
		private string _gender;
		
		private System.DateTime _birthday;
		
		private string _address;
		
		private string _phone_number;
		
		private string _level_id;
		
		private string _status;
		
		private System.Data.Linq.Binary _image;
		
		private EntitySet<bill> _bills;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_accountChanging(int value);
    partial void Onid_accountChanged();
    partial void Onname_accountChanging(string value);
    partial void Onname_accountChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void OnbirthdayChanging(System.DateTime value);
    partial void OnbirthdayChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void Onlevel_idChanging(string value);
    partial void Onlevel_idChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnimageChanging(System.Data.Linq.Binary value);
    partial void OnimageChanged();
    #endregion
		
		public account()
		{
			this._bills = new EntitySet<bill>(new Action<bill>(this.attach_bills), new Action<bill>(this.detach_bills));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_account", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_account
		{
			get
			{
				return this._id_account;
			}
			set
			{
				if ((this._id_account != value))
				{
					this.Onid_accountChanging(value);
					this.SendPropertyChanging();
					this._id_account = value;
					this.SendPropertyChanged("id_account");
					this.Onid_accountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_account", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name_account
		{
			get
			{
				return this._name_account;
			}
			set
			{
				if ((this._name_account != value))
				{
					this.Onname_accountChanging(value);
					this.SendPropertyChanging();
					this._name_account = value;
					this.SendPropertyChanged("name_account");
					this.Onname_accountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="DateTime NOT NULL")]
		public System.DateTime birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_level_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string level_id
		{
			get
			{
				return this._level_id;
			}
			set
			{
				if ((this._level_id != value))
				{
					this.Onlevel_idChanging(value);
					this.SendPropertyChanging();
					this._level_id = value;
					this.SendPropertyChanged("level_id");
					this.Onlevel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_bill", Storage="_bills", ThisKey="id_account", OtherKey="id_account")]
		public EntitySet<bill> bills
		{
			get
			{
				return this._bills;
			}
			set
			{
				this._bills.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.account = this;
		}
		
		private void detach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.type_product")]
	public partial class type_product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_type_product;
		
		private string _name_type_product;
		
		private string _status;
		
		private EntitySet<product> _products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_type_productChanging(int value);
    partial void Onid_type_productChanged();
    partial void Onname_type_productChanging(string value);
    partial void Onname_type_productChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public type_product()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_type_product", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_type_product
		{
			get
			{
				return this._id_type_product;
			}
			set
			{
				if ((this._id_type_product != value))
				{
					this.Onid_type_productChanging(value);
					this.SendPropertyChanging();
					this._id_type_product = value;
					this.SendPropertyChanged("id_type_product");
					this.Onid_type_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_type_product", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name_type_product
		{
			get
			{
				return this._name_type_product;
			}
			set
			{
				if ((this._name_type_product != value))
				{
					this.Onname_type_productChanging(value);
					this.SendPropertyChanging();
					this._name_type_product = value;
					this.SendPropertyChanged("name_type_product");
					this.Onname_type_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_product_product", Storage="_products", ThisKey="id_type_product", OtherKey="id_type_product")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.type_product = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.type_product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.product")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_product;
		
		private string _name_product;
		
		private string _describe;
		
		private int _number;
		
		private double _price;
		
		private System.Nullable<int> _id_type_product;
		
		private string _status;
		
		private System.Data.Linq.Binary _image;
		
		private EntityRef<type_product> _type_product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_productChanging(int value);
    partial void Onid_productChanged();
    partial void Onname_productChanging(string value);
    partial void Onname_productChanged();
    partial void OndescribeChanging(string value);
    partial void OndescribeChanged();
    partial void OnnumberChanging(int value);
    partial void OnnumberChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void Onid_type_productChanging(System.Nullable<int> value);
    partial void Onid_type_productChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnimageChanging(System.Data.Linq.Binary value);
    partial void OnimageChanged();
    #endregion
		
		public product()
		{
			this._type_product = default(EntityRef<type_product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_product", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_product
		{
			get
			{
				return this._id_product;
			}
			set
			{
				if ((this._id_product != value))
				{
					this.Onid_productChanging(value);
					this.SendPropertyChanging();
					this._id_product = value;
					this.SendPropertyChanged("id_product");
					this.Onid_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_product", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name_product
		{
			get
			{
				return this._name_product;
			}
			set
			{
				if ((this._name_product != value))
				{
					this.Onname_productChanging(value);
					this.SendPropertyChanging();
					this._name_product = value;
					this.SendPropertyChanged("name_product");
					this.Onname_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_describe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string describe
		{
			get
			{
				return this._describe;
			}
			set
			{
				if ((this._describe != value))
				{
					this.OndescribeChanging(value);
					this.SendPropertyChanging();
					this._describe = value;
					this.SendPropertyChanged("describe");
					this.OndescribeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="Int NOT NULL")]
		public int number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_type_product", DbType="Int")]
		public System.Nullable<int> id_type_product
		{
			get
			{
				return this._id_type_product;
			}
			set
			{
				if ((this._id_type_product != value))
				{
					if (this._type_product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_type_productChanging(value);
					this.SendPropertyChanging();
					this._id_type_product = value;
					this.SendPropertyChanged("id_type_product");
					this.Onid_type_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_product_product", Storage="_type_product", ThisKey="id_type_product", OtherKey="id_type_product", IsForeignKey=true, DeleteRule="CASCADE")]
		public type_product type_product
		{
			get
			{
				return this._type_product.Entity;
			}
			set
			{
				type_product previousValue = this._type_product.Entity;
				if (((previousValue != value) 
							|| (this._type_product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._type_product.Entity = null;
						previousValue.products.Remove(this);
					}
					this._type_product.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._id_type_product = value.id_type_product;
					}
					else
					{
						this._id_type_product = default(Nullable<int>);
					}
					this.SendPropertyChanged("type_product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.table_cm")]
	public partial class table_cm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_table;
		
		private string _name_table;
		
		private int _floor;
		
		private string _status;
		
		private EntitySet<bill> _bills;
		
		private EntityRef<floor> _floor1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_tableChanging(int value);
    partial void Onid_tableChanged();
    partial void Onname_tableChanging(string value);
    partial void Onname_tableChanged();
    partial void OnfloorChanging(int value);
    partial void OnfloorChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public table_cm()
		{
			this._bills = new EntitySet<bill>(new Action<bill>(this.attach_bills), new Action<bill>(this.detach_bills));
			this._floor1 = default(EntityRef<floor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_table", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_table
		{
			get
			{
				return this._id_table;
			}
			set
			{
				if ((this._id_table != value))
				{
					this.Onid_tableChanging(value);
					this.SendPropertyChanging();
					this._id_table = value;
					this.SendPropertyChanged("id_table");
					this.Onid_tableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_table", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name_table
		{
			get
			{
				return this._name_table;
			}
			set
			{
				if ((this._name_table != value))
				{
					this.Onname_tableChanging(value);
					this.SendPropertyChanging();
					this._name_table = value;
					this.SendPropertyChanged("name_table");
					this.Onname_tableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_floor", DbType="Int NOT NULL")]
		public int floor
		{
			get
			{
				return this._floor;
			}
			set
			{
				if ((this._floor != value))
				{
					if (this._floor1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfloorChanging(value);
					this.SendPropertyChanging();
					this._floor = value;
					this.SendPropertyChanged("floor");
					this.OnfloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="table_cm_bill", Storage="_bills", ThisKey="id_table", OtherKey="id_table")]
		public EntitySet<bill> bills
		{
			get
			{
				return this._bills;
			}
			set
			{
				this._bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="floor_table_cm", Storage="_floor1", ThisKey="floor", OtherKey="Id", IsForeignKey=true)]
		public floor floor1
		{
			get
			{
				return this._floor1.Entity;
			}
			set
			{
				floor previousValue = this._floor1.Entity;
				if (((previousValue != value) 
							|| (this._floor1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._floor1.Entity = null;
						previousValue.table_cms.Remove(this);
					}
					this._floor1.Entity = value;
					if ((value != null))
					{
						value.table_cms.Add(this);
						this._floor = value.Id;
					}
					else
					{
						this._floor = default(int);
					}
					this.SendPropertyChanged("floor1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.table_cm = this;
		}
		
		private void detach_bills(bill entity)
		{
			this.SendPropertyChanging();
			entity.table_cm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.floor")]
	public partial class floor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name_floor;
		
		private EntitySet<table_cm> _table_cms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onname_floorChanging(string value);
    partial void Onname_floorChanged();
    #endregion
		
		public floor()
		{
			this._table_cms = new EntitySet<table_cm>(new Action<table_cm>(this.attach_table_cms), new Action<table_cm>(this.detach_table_cms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_floor", DbType="NVarChar(50)")]
		public string name_floor
		{
			get
			{
				return this._name_floor;
			}
			set
			{
				if ((this._name_floor != value))
				{
					this.Onname_floorChanging(value);
					this.SendPropertyChanging();
					this._name_floor = value;
					this.SendPropertyChanged("name_floor");
					this.Onname_floorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="floor_table_cm", Storage="_table_cms", ThisKey="Id", OtherKey="floor")]
		public EntitySet<table_cm> table_cms
		{
			get
			{
				return this._table_cms;
			}
			set
			{
				this._table_cms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_table_cms(table_cm entity)
		{
			this.SendPropertyChanging();
			entity.floor1 = this;
		}
		
		private void detach_table_cms(table_cm entity)
		{
			this.SendPropertyChanging();
			entity.floor1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.detail_bill")]
	public partial class detail_bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _id_bill;
		
		private System.Nullable<int> _id_product;
		
		private string _name_product;
		
		private System.Nullable<int> _number;
		
		private System.Nullable<double> _price;
		
		private System.Nullable<double> _total_price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_billChanging(System.Nullable<int> value);
    partial void Onid_billChanged();
    partial void Onid_productChanging(System.Nullable<int> value);
    partial void Onid_productChanged();
    partial void Onname_productChanging(string value);
    partial void Onname_productChanged();
    partial void OnnumberChanging(System.Nullable<int> value);
    partial void OnnumberChanged();
    partial void OnpriceChanging(System.Nullable<double> value);
    partial void OnpriceChanged();
    partial void Ontotal_priceChanging(System.Nullable<double> value);
    partial void Ontotal_priceChanged();
    #endregion
		
		public detail_bill()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_bill", DbType="Int")]
		public System.Nullable<int> id_bill
		{
			get
			{
				return this._id_bill;
			}
			set
			{
				if ((this._id_bill != value))
				{
					this.Onid_billChanging(value);
					this.SendPropertyChanging();
					this._id_bill = value;
					this.SendPropertyChanged("id_bill");
					this.Onid_billChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_product", DbType="Int")]
		public System.Nullable<int> id_product
		{
			get
			{
				return this._id_product;
			}
			set
			{
				if ((this._id_product != value))
				{
					this.Onid_productChanging(value);
					this.SendPropertyChanging();
					this._id_product = value;
					this.SendPropertyChanged("id_product");
					this.Onid_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_product", DbType="NVarChar(50)")]
		public string name_product
		{
			get
			{
				return this._name_product;
			}
			set
			{
				if ((this._name_product != value))
				{
					this.Onname_productChanging(value);
					this.SendPropertyChanging();
					this._name_product = value;
					this.SendPropertyChanged("name_product");
					this.Onname_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="Int")]
		public System.Nullable<int> number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_price", DbType="Float")]
		public System.Nullable<double> total_price
		{
			get
			{
				return this._total_price;
			}
			set
			{
				if ((this._total_price != value))
				{
					this.Ontotal_priceChanging(value);
					this.SendPropertyChanging();
					this._total_price = value;
					this.SendPropertyChanged("total_price");
					this.Ontotal_priceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bill")]
	public partial class bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_bill;
		
		private System.Nullable<int> _id_table;
		
		private System.Nullable<int> _id_account;
		
		private System.Nullable<System.DateTime> _time_out;
		
		private System.Nullable<int> _number_product;
		
		private System.Nullable<double> _total_money;
		
		private EntityRef<account> _account;
		
		private EntityRef<table_cm> _table_cm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_billChanging(int value);
    partial void Onid_billChanged();
    partial void Onid_tableChanging(System.Nullable<int> value);
    partial void Onid_tableChanged();
    partial void Onid_accountChanging(System.Nullable<int> value);
    partial void Onid_accountChanged();
    partial void Ontime_outChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_outChanged();
    partial void Onnumber_productChanging(System.Nullable<int> value);
    partial void Onnumber_productChanged();
    partial void Ontotal_moneyChanging(System.Nullable<double> value);
    partial void Ontotal_moneyChanged();
    #endregion
		
		public bill()
		{
			this._account = default(EntityRef<account>);
			this._table_cm = default(EntityRef<table_cm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_bill", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_bill
		{
			get
			{
				return this._id_bill;
			}
			set
			{
				if ((this._id_bill != value))
				{
					this.Onid_billChanging(value);
					this.SendPropertyChanging();
					this._id_bill = value;
					this.SendPropertyChanged("id_bill");
					this.Onid_billChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_table", DbType="Int")]
		public System.Nullable<int> id_table
		{
			get
			{
				return this._id_table;
			}
			set
			{
				if ((this._id_table != value))
				{
					if (this._table_cm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_tableChanging(value);
					this.SendPropertyChanging();
					this._id_table = value;
					this.SendPropertyChanged("id_table");
					this.Onid_tableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_account", DbType="Int")]
		public System.Nullable<int> id_account
		{
			get
			{
				return this._id_account;
			}
			set
			{
				if ((this._id_account != value))
				{
					if (this._account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_accountChanging(value);
					this.SendPropertyChanging();
					this._id_account = value;
					this.SendPropertyChanged("id_account");
					this.Onid_accountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_out", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_out
		{
			get
			{
				return this._time_out;
			}
			set
			{
				if ((this._time_out != value))
				{
					this.Ontime_outChanging(value);
					this.SendPropertyChanging();
					this._time_out = value;
					this.SendPropertyChanged("time_out");
					this.Ontime_outChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number_product", DbType="Int")]
		public System.Nullable<int> number_product
		{
			get
			{
				return this._number_product;
			}
			set
			{
				if ((this._number_product != value))
				{
					this.Onnumber_productChanging(value);
					this.SendPropertyChanging();
					this._number_product = value;
					this.SendPropertyChanged("number_product");
					this.Onnumber_productChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_money", DbType="Float")]
		public System.Nullable<double> total_money
		{
			get
			{
				return this._total_money;
			}
			set
			{
				if ((this._total_money != value))
				{
					this.Ontotal_moneyChanging(value);
					this.SendPropertyChanging();
					this._total_money = value;
					this.SendPropertyChanged("total_money");
					this.Ontotal_moneyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="account_bill", Storage="_account", ThisKey="id_account", OtherKey="id_account", IsForeignKey=true, DeleteRule="CASCADE")]
		public account account
		{
			get
			{
				return this._account.Entity;
			}
			set
			{
				account previousValue = this._account.Entity;
				if (((previousValue != value) 
							|| (this._account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._account.Entity = null;
						previousValue.bills.Remove(this);
					}
					this._account.Entity = value;
					if ((value != null))
					{
						value.bills.Add(this);
						this._id_account = value.id_account;
					}
					else
					{
						this._id_account = default(Nullable<int>);
					}
					this.SendPropertyChanged("account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="table_cm_bill", Storage="_table_cm", ThisKey="id_table", OtherKey="id_table", IsForeignKey=true, DeleteRule="CASCADE")]
		public table_cm table_cm
		{
			get
			{
				return this._table_cm.Entity;
			}
			set
			{
				table_cm previousValue = this._table_cm.Entity;
				if (((previousValue != value) 
							|| (this._table_cm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._table_cm.Entity = null;
						previousValue.bills.Remove(this);
					}
					this._table_cm.Entity = value;
					if ((value != null))
					{
						value.bills.Add(this);
						this._id_table = value.id_table;
					}
					else
					{
						this._id_table = default(Nullable<int>);
					}
					this.SendPropertyChanged("table_cm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
